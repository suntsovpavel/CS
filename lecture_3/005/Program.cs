// Итак, вы попробовали создавать методы для работы с текстом. Теперь снова поработаем с
// массивами. В качестве задачи для работы с массивами, я выбрал упорядочивание данных
// внутри массива. Существуют разные алгоритмы, которые вы, скорее всего, будете писать в
// дальнейшем. Остановимся на одном из самых простых. Это так называемый алгоритм
// сортировки методом выбора, ещё его называют алгоритм сортировки методом минимакса или
// иногда просто называют методом максимального, или выбора максимального или выбора
// минимального и так далее. Узнаем, в чём особенность (суть) этого алгоритма. 
//Есть какая-то последовательность чисел. Наша задача — выбрать самый первый элемент и в оставшейся
// части, с учётом нашей текущей позиции определить минимальный. После того как он найден,
// нужно поменять выделенный (рабочий элемент), на который сейчас указывает стрелочка, это
// 6, с единицей, являющейся для нас минимальной среди всех чисел.
// Было: 6 8 3 2 1 4 5 7
// Стало: 1 8 3 2 6 4 5 7
// Поменяли. Дальше у нас следующий шаг, который будет выбирать очередной рабочий элемент
// для нас. Это теперь 8. Мы явно указываем то, что 1 уже отсортировано, к ней больше касаться
// не нужно. Дальше наша задача во всём неотсортированном кусочке (7 чисел справа) выбрать снова
// минимальный. Поменять его местами с рабочим.
// Было: 1 8 3 2 6 4 5 7
// Стало: 1 2 3 8 6 4 5 7
// Следующий рабочий элемент - 3, а неотсортированная область: 6 чисел справа
// И т.д.
// Конечный результат: 1 2 3 4 5 6 7 8

int[] arr = { 1, 5, 4, 3, 2, 6, 7, 1, 1 };

void PrintArray(int[] arr)
{
    int length = arr.Length;

    for (int i = 0; i < length; i++)
    {
        System.Console.Write($"{arr[i]} ");
    }
    System.Console.WriteLine();
}

void SelectionSort(int[] arr)
{
    for (int i = 0; i < arr.Length - 1; i++) 
    {
        int maxPosition = i;

        for (int j = i + 1; j < arr.Length; j++)
        {
            if (arr[j] < arr[maxPosition]) maxPosition = j;
        }

        //меняем местами arr[i] и arr[maxPosition]:
        int tmp = arr[i];
        arr[i] = arr[maxPosition];
        arr[maxPosition] = tmp;
    }
}

//SelectionSort(arr);
//PrintArray(arr);

//А эта функция упорядочивает массив от большего элемента к меньшему:
//Отличается только знаком '>' вместо '<' в строке if (arr[j] ...
void InvertSelectionSort(int[] arr)
{
    for (int i = 0; i < arr.Length - 1; i++) 
    {
        int maxPosition = i;

        for (int j = i + 1; j < arr.Length; j++)
        {
            if (arr[j] > arr[maxPosition]) maxPosition = j;
        }

        //меняем местами arr[i] и arr[maxPosition]:
        int tmp = arr[i];
        arr[i] = arr[maxPosition];
        arr[maxPosition] = tmp;
    }
}

InvertSelectionSort(arr);
PrintArray(arr);